from aiogram.fsm.context import FSMContext
from aiogram.filters import ChatMemberUpdatedFilter, KICKED
from aiogram.types import CallbackQuery, Message, ChatMemberUpdated
from aiogram import Router, F

from bot.keyboards.main_keyboards import *

from bot.middlewares.throttling import ThrottlingMiddleware

from bot.db.requests import check_schedule_existence, get_user, get_user_schedule, delete_user

from bot.misc.states import RegistrationSteps

import datetime as dt


router = Router()
router.message.outer_middleware(ThrottlingMiddleware())


@router.message(F.text == '–ø—Ä–æ—Ñ–∏–ª—å üë§')
async def get_profile_info(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É –µ–≥–æ –¥–∞–Ω–Ω—ã–µ.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    user = await get_user(message.from_user.id)
    if user:
        class_group = '–≥—Ä—É–ø–ø–∞ –ê' if user.class_group == 0 else '–ì—Ä—É–ø–ø–∞ –ë'

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ—Ç–≤–æ—Ä–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        await state.set_state(RegistrationSteps.class_num_choose)

        await message.answer(
            f'üìö –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:\nüìô {user.class_letter} –∫–ª–∞—Å—Å, {class_group}\nüìó {user.uday_group} –≥—Ä—É–ø–ø–∞ '
            f'—É–Ω–∏–≤–µ—Ä–¥–Ω—è',
            reply_markup=edit_data_kb()
        )


@router.message(F.text == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìã')
async def schedule_day_choose(message: Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä –¥–Ω—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –µ—Å–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞
    —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–Ω—è, –∏–Ω–∞—á–µ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
    —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    today = dt.datetime.today().date()
    tomorrow = today + dt.timedelta(days=1)
    today_flag, tomorrow_flag = await check_schedule_existence(today, tomorrow)
    if today_flag or tomorrow_flag:
        await message.answer('–≤—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –¥–µ–Ω—åüëá',
                             reply_markup=day_choose_kb(today_flag, tomorrow_flag, today, tomorrow))
    else:
        await message.answer('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')


@router.callback_query(F.data.startswith('date='))
async def get_schedule(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç–µ.
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏
    –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç–æ–π.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    date = dt.datetime.strptime(callback.data.split('=')[1], '%d%m%y').date()
    user = await get_user(callback.from_user.id)
    lessons = await get_user_schedule(user.class_letter, user.class_group, user.uday_group, date)
    await callback.message.edit_text(text='\n\n'.join(lessons))


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=KICKED))
async def process_user_blocked_bot(event: ChatMemberUpdated):
    """
    –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–ª–æ–∫–∏—Ä—É–µ—Ç –±–æ—Ç–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        event (ChatMemberUpdated): –°–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    await delete_user(event.from_user.id)

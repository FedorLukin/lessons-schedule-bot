from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramForbiddenError
from aiogram.filters import StateFilter
from aiogram.types import CallbackQuery, Message
from aiogram import Bot
from aiogram import Router, F

from bot.keyboards.admin_panel_keyboards import *

from bot.middlewares.admin_filter import AdminAccessMiddleware

from bot.db.requests import get_users, set_admin, get_admins

from bot.misc.states import DevPanelStates

from dotenv import dotenv_values

import datetime as dt
import sys


router = Router()
router.message.middleware(AdminAccessMiddleware())
router.callback_query.middleware(AdminAccessMiddleware())


@router.message(F.text == '–ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ‚öôÔ∏è')
async def developer_panel(message: Message, state: FSMContext) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
                            –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    await message.answer(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞!', reply_markup=developer_panel_kb())
    await state.clear()


@router.callback_query(F.data == 'logs')
async def logs_stats(callback: CallbackQuery) -> None:
    """
    –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–æ–µ —Å—É—Ç–æ–∫ –≤ –ª–æ–≥–∞—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ
    –æ–± –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–ª–∏ –æ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∑–∞–ø—Ä–æ—Å–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    await callback.message.delete()

    today_date = dt.date.today()
    yesterday_date = today_date - dt.timedelta(days=1)
    today, yesterday = today_date.strftime('%Y-%m-%d'), yesterday_date.strftime('%Y-%m-%d')

    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–æ–≤ —Å –¥–∞—Ç–æ–π –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –¥–≤—É—Ö —Å—É—Ç–æ–∫
    with open('logs.log') as log_file:
        data = log_file.read()
        errors_today, errors_yesterday = data.count(today), data.count(yesterday)

    if errors_today or errors_yesterday:
        await callback.message.answer(text=f'‚ö†Ô∏è–æ—Ç—á—ë—Ç –æ–± –æ—à–∏–±–∫–∞—Ö‚ö†Ô∏è\n–æ—à–∏–±–æ–∫ —Å–µ–≥–æ–¥–Ω—è: {errors_today}'
                                           f'\n–æ—à–∏–±–æ–∫ –≤—á–µ—Ä–∞: {errors_yesterday}')
    else:
        await callback.message.answer(text='–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–æ–µ —Å—É—Ç–æ–∫ –æ—à–∏–±–æ–∫ –Ω–µ –±—ã–ª–æ ‚úÖ')


@router.callback_query(F.data == 'stats')
async def users_stats(callback: CallbackQuery) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–± –æ–±—â–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ –∏ –∏—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∑–∞–ø—Ä–æ—Å–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    await callback.message.delete()
    ten_class_users = len(await get_users('10'))
    eleven_class_users = len(await get_users('11'))
    await callback.message.answer(text=f'—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞ üìà\n–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—Å–µ–≥–æ:'
                                       f' {ten_class_users + eleven_class_users}\n—É—á–µ–Ω–∏–∫–æ–≤ 10-—Ö –∫–ª–∞—Å—Å–æ–≤:'
                                       f' {ten_class_users}üë©üèº‚Äçüíª\n—É—á–µ–Ω–∏–∫–æ–≤ 11-—Ö –∫–ª–∞—Å—Å–æ–≤: {eleven_class_users}üßëüèº‚Äçüíª')


@router.callback_query(F.data == 'add_admin')
async def new_admin_id_request(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º user id –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∑–∞–ø—Ä–æ—Å–µ.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    await callback.message.delete()
    await callback.message.answer(text='–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º user id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º')
    await state.set_state(DevPanelStates.new_admin_request)


@router.message(StateFilter(DevPanelStates.new_admin_request))
async def add_new_admin_confirmation(message: Message, state: FSMContext) -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º –µ—Å–ª–∏ user id –±—ã–ª —É–∫–∞–∑–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ,
    –∏–Ω–∞—á–µ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ–± –æ—à–∏–±–∫–µ.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Ç–µ–ª–µ–≥—Ä–∞–º user id –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    user_id = message.text
    if user_id.isdigit():
        await state.update_data(id=str(user_id))
        await state.set_state(DevPanelStates.new_admin_adding)
        await message.answer(text=f'–Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id: {message.text} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞?\n\n'
                                  f'–¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "confirm"')
    else:
        await message.answer(text='‚ö†Ô∏è –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, user id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º ‚ö†Ô∏è')


@router.message(F.text == 'confirm', StateFilter(DevPanelStates.new_admin_adding))
async def new_admin_adding(message: Message, state: FSMContext) -> None:
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º user id –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è, —É–≤–µ–¥–æ–º–ª—è–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    data = await state.get_data()
    new_admin_id = int(data['id'])
    await set_admin(new_admin_id)
    await message.answer(text='–Ω–æ–≤—ã–π –∞–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω üìÅ')
    await state.clear()


@router.callback_query(F.data == 'stop_bot')
async def stop_bot_confirmation(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    await callback.message.delete()
    await callback.message.answer(text='–≤—ã —É–≤–µ—Ä–µ–Ω—ã? –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "stop"')
    await state.set_state(DevPanelStates.stop_bot)


@router.message(F.text == 'stop', StateFilter(DevPanelStates.stop_bot))
async def stop_bot(message: Message, state: FSMContext, bot: Bot) -> None:
    """
    –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –∫–µ–º –æ–Ω–∞ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
    """
    await message.reply("–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–∞...")
    admin_and_devs_ids = await get_admins()

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –∏ —Ä–∞–∑—Ä–∞–±–æ–≤ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞
    for id in admin_and_devs_ids:
        try:
            await bot.send_message(chat_id=id, text=f'–±–æ—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º {message.from_user.first_name} ‚ùóÔ∏è')
        except TelegramForbiddenError:
            pass

    sys.exit(0)
